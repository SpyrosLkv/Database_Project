-- MySQL Script generated by MySQL Workbench
-- Mon May  1 21:21:13 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema semester_project
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema semester_project
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `semester_project` DEFAULT CHARACTER SET utf8 ;
USE `semester_project` ;

-- -----------------------------------------------------
-- Table `semester_project`.`Authors`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `semester_project`.`Authors` (
  `author_id` INT NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`author_id`))
ENGINE = InnoDB
KEY_BLOCK_SIZE = 4;


-- -----------------------------------------------------
-- Table `semester_project`.`Belongs_in`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `semester_project`.`Belongs_in` (
  `category_id` INT NOT NULL,
  `book_ISBN` BIGINT(13) NOT NULL,
  PRIMARY KEY (`category_id`, `book_ISBN`),
  INDEX `fk_Thematic category_has_Book_Book1_idx` (`book_ISBN` ASC) VISIBLE,
  INDEX `fk_Thematic category_has_Book_Thematic category1_idx` (`category_id` ASC) VISIBLE,
  CONSTRAINT `fk__Belongs_in_Thematic_Category`
    FOREIGN KEY (`category_id`)
    REFERENCES `semester_project`.`Thematic_Category` (`category_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Belongs_in_Book_ISBN`
    FOREIGN KEY (`book_ISBN`)
    REFERENCES `semester_project`.`Book` (`ISBN`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `semester_project`.`Book`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `semester_project`.`Book` (
  `ISBN` BIGINT(13) NOT NULL,
  `title` VARCHAR(45) NOT NULL,
  `tublisher` VARCHAR(45) NOT NULL,
  `no_of_pages` INT NOT NULL,
  `summary` TEXT NULL,
  `image` BLOB(262144) NULL,
  `language` VARCHAR(45) NOT NULL DEFAULT 'Greek',
  PRIMARY KEY (`ISBN`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `semester_project`.`Card`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `semester_project`.`Card` (
  `user_id` INT NOT NULL,
  `card_no` TINYINT NOT NULL,
  `status` ENUM("Pending", "Active", "Inactive", "Missing") NOT NULL DEFAULT "Pending",
  PRIMARY KEY (`user_id`, `card_no`),
  INDEX `fk_Card_Users1_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `fk_Card_Users_Id`
    FOREIGN KEY (`user_id`)
    REFERENCES `semester_project`.`Users` (`user_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `semester_project`.`Keywords`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `semester_project`.`Keywords` (
  `keyword_id` INT NOT NULL AUTO_INCREMENT,
  `keyword` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`keyword_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `semester_project`.`Keywords_in_book`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `semester_project`.`Keywords_in_book` (
  `keyword_id` INT NOT NULL,
  `book_ISBN` BIGINT(13) NOT NULL,
  PRIMARY KEY (`keyword_id`, `book_ISBN`),
  INDEX `fk_Keywords_has_Book_Book1_idx` (`book_ISBN` ASC) VISIBLE,
  INDEX `fk_Keywords_has_Book_Keywords1_idx` (`keyword_id` ASC) VISIBLE,
  CONSTRAINT `fk_Keywords_Keyword_id`
    FOREIGN KEY (`keyword_id`)
    REFERENCES `semester_project`.`Keywords` (`keyword_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk__Keywords_Book_ISBN`
    FOREIGN KEY (`book_ISBN`)
    REFERENCES `semester_project`.`Book` (`ISBN`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `semester_project`.`Lib_Owns_Book`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `semester_project`.`Lib_Owns_Book` (
  `book_ISBN` BIGINT(13) NOT NULL,
  `library_id` INT NOT NULL,
  `total_copies` SMALLINT NOT NULL,
  `available_copies` SMALLINT NOT NULL,
  PRIMARY KEY (`book_ISBN`, `library_id`),
  INDEX `fk_Book_has_School - Library_School - Library1_idx` (`library_id` ASC) VISIBLE,
  INDEX `fk_Book_has_School - Library_Book1_idx` (`book_ISBN` ASC) VISIBLE,
  CONSTRAINT `available_copies_number`
    CHECK (`available_copies` >= 0 and `available_copies` <= `total_copies`),
  CONSTRAINT `fk_Owns_Book_ISBN`
    FOREIGN KEY (`book_ISBN`)
    REFERENCES `semester_project`.`Book` (`ISBN`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Owns_Library_id`
    FOREIGN KEY (`library_id`)
    REFERENCES `semester_project`.`School_Library` (`library_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `semester_project`.`Loan`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `semester_project`.`Loan` (
  `book_ISBN` BIGINT(13) NOT NULL,
  `user_id` INT NOT NULL,
  `loan_date` DATETIME NOT NULL,
  `return_date` DATETIME NULL,
  `status` ENUM("Active", "Late Active", "Returned", "Late Returned") NOT NULL,
  PRIMARY KEY (`book_ISBN`, `user_id`),
  INDEX `fk_Book_has_Users_Users3_idx` (`user_id` ASC) VISIBLE,
  INDEX `fk_Book_has_Users_Book2_idx` (`book_ISBN` ASC) VISIBLE,
  CONSTRAINT `fk_Loan_Book_ISBN`
    FOREIGN KEY (`book_ISBN`)
    REFERENCES `semester_project`.`Book` (`ISBN`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Loan_User_Id`
    FOREIGN KEY (`user_id`)
    REFERENCES `semester_project`.`Users` (`user_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `semester_project`.`Operator_Appointment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `semester_project`.`Operator_Appointment` (
  `operator_id` INT NOT NULL,
  `library_appointment` INT NOT NULL,
  `administrator_id` INT NOT NULL,
  `appointment_no` VARCHAR(45) NOT NULL,
  `date_of_appointment` DATETIME NULL,
  PRIMARY KEY (`operator_id`, `library_appointment`, `administrator_id`, `appointment_no`),
  INDEX `fk_Operator Appointment_School - Library1_idx` (`library_appointment` ASC) VISIBLE,
  INDEX `fk_Operator Appointment_Users2_idx` (`administrator_id` ASC) VISIBLE,
  CONSTRAINT `fk_OA_Operator`
    FOREIGN KEY (`operator_id`)
    REFERENCES `semester_project`.`Users` (`user_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_OA_Library`
    FOREIGN KEY (`library_appointment`)
    REFERENCES `semester_project`.`School_Library` (`library_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_OA_Admin`
    FOREIGN KEY (`administrator_id`)
    REFERENCES `semester_project`.`Users` (`user_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `semester_project`.`Pending_Registrations`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `semester_project`.`Pending_Registrations` (
  `username` VARCHAR(45) NOT NULL,
  `password_hashed` TEXT NOT NULL,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  `Birth_Date` DATETIME NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `role` ENUM("Admin", "Operator", "Teacher", "Student") NOT NULL,
  `library_id` INT NOT NULL,
  PRIMARY KEY (`username`, `library_id`),
  INDEX `fk_Pending Registrations_School - Library1_idx` (`library_id` ASC) VISIBLE,
  CONSTRAINT `fk_Registration_Library_id`
    FOREIGN KEY (`library_id`)
    REFERENCES `semester_project`.`School_Library` (`library_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `semester_project`.`Reg_Phone_No`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `semester_project`.`Reg_Phone_No` (
  `number` BIGINT(20) NOT NULL,
  `registration_username` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`number`, `registration_username`),
  INDEX `fk_Reg_ phone No_Registration1_idx` (`registration_username` ASC) VISIBLE,
  CONSTRAINT `fk_Reg_ phone No_Registration1`
    FOREIGN KEY (`registration_username`)
    REFERENCES `semester_project`.`Pending_Registrations` (`username`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `semester_project`.`Reservation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `semester_project`.`Reservation` (
  `book_ISBN` BIGINT(13) NOT NULL,
  `user_id` INT NOT NULL,
  `reservation_date` DATETIME NOT NULL,
  `expiration_date` DATETIME NOT NULL,
  `status` ENUM("Active", "Honoured", "Expired") NULL,
  PRIMARY KEY (`book_ISBN`, `user_id`),
  INDEX `fk_Book_has_Users_Users2_idx` (`user_id` ASC) VISIBLE,
  INDEX `fk_Book_has_Users_Book1_idx` (`book_ISBN` ASC) VISIBLE,
  CONSTRAINT `fk_Res_Book_ISBN`
    FOREIGN KEY (`book_ISBN`)
    REFERENCES `semester_project`.`Book` (`ISBN`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Res_User_Id`
    FOREIGN KEY (`user_id`)
    REFERENCES `semester_project`.`Users` (`user_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `semester_project`.`Reviews`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `semester_project`.`Reviews` (
  `book_ISBN` BIGINT(13) NOT NULL,
  `user_id` INT NOT NULL,
  `likert_rating` TINYINT NOT NULL,
  `review` TEXT NULL,
  PRIMARY KEY (`book_ISBN`, `user_id`),
  INDEX `fk_Book_has_Users_Users1_idx` (`user_id` ASC) VISIBLE,
  INDEX `fk_Book_has_Users_Book_idx` (`book_ISBN` ASC) VISIBLE,
  CONSTRAINT `fk_Rev_Book_ISBN`
    FOREIGN KEY (`book_ISBN`)
    REFERENCES `semester_project`.`Book` (`ISBN`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Rev_User_Id`
    FOREIGN KEY (`user_id`)
    REFERENCES `semester_project`.`Users` (`user_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `semester_project`.`School_Library`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `semester_project`.`School_Library` (
  `library_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `address` VARCHAR(45) NOT NULL,
  `town` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `principals_id` INT NOT NULL,
  PRIMARY KEY (`library_id`),
  INDEX `fk_School - Library_Users1_idx` (`principals_id` ASC) VISIBLE,
  CONSTRAINT `fk_Principal_id`
    FOREIGN KEY (`principals_id`)
    REFERENCES `semester_project`.`Users` (`user_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `semester_project`.`School_Phone_No`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `semester_project`.`School_Phone_No` (
  `phone_no` BIGINT(20) NOT NULL,
  `library_id` INT NOT NULL,
  PRIMARY KEY (`phone_no`, `library_id`),
  INDEX `fk_School_Phone_No_School - Library1_idx` (`library_id` ASC) VISIBLE,
  CONSTRAINT `fk_Phone_Library_id`
    FOREIGN KEY (`library_id`)
    REFERENCES `semester_project`.`School_Library` (`library_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `semester_project`.`Thematic_Category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `semester_project`.`Thematic_Category` (
  `category_id` INT NOT NULL AUTO_INCREMENT,
  `category` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`category_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `semester_project`.`User_Phone_No`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `semester_project`.`User_Phone_No` (
  `number` BIGINT(20) NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`number`, `user_id`),
  INDEX `fk_User_Phone_No_Users1_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `fk_Phone_User_Id`
    FOREIGN KEY (`user_id`)
    REFERENCES `semester_project`.`Users` (`user_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `semester_project`.`Users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `semester_project`.`Users` (
  `user_id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(45) NOT NULL,
  `Password_Hashed` TEXT NOT NULL,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  `birth_date` DATETIME NOT NULL,
  `email` VARCHAR(45) NULL,
  `Role` ENUM("Admin", "Operator", "Teacher", "Student") NOT NULL,
  `last_update` TIMESTAMP NOT NULL,
  `status` VARCHAR(45) NOT NULL,
  `users_library_id` INT NOT NULL,
  PRIMARY KEY (`user_id`),
  UNIQUE INDEX `Username_UNIQUE` (`username` ASC) VISIBLE,
  INDEX `fk_Users_School - Library1_idx` (`users_library_id` ASC) VISIBLE,
  UNIQUE INDEX `User_Id_UNIQUE` (`user_id` ASC) VISIBLE,
  CONSTRAINT `fk_User_Library_id`
    FOREIGN KEY (`users_library_id`)
    REFERENCES `semester_project`.`School_Library` (`library_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `semester_project`.`Wrote`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `semester_project`.`Wrote` (
  `author_id` INT NOT NULL,
  `book_ISBN` BIGINT(13) NOT NULL,
  PRIMARY KEY (`author_id`, `book_ISBN`),
  INDEX `fk_Authors_has_Book_Book1_idx` (`book_ISBN` ASC) VISIBLE,
  INDEX `fk_Authors_has_Book_Authors1_idx` (`author_id` ASC) VISIBLE,
  CONSTRAINT `fk_Wrote_Author_id`
    FOREIGN KEY (`author_id`)
    REFERENCES `semester_project`.`Authors` (`author_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Wrote_Book_ISBN`
    FOREIGN KEY (`book_ISBN`)
    REFERENCES `semester_project`.`Book` (`ISBN`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- ----------------------------------------
-- Trigger for default value of available copies
-- ----------------------------------------

DELIMITER $
CREATE TRIGGER set_available_copies
BEFORE INSERT ON `semester_project`.`Lib_Owns_Book` 
FOR EACH ROW
BEGIN 
  IF NEW.available_copies IS NULL THEN
    SET NEW.available_copies = NEW.total_copies;
  END IF;
END $
DELIMITER ;


-- -----------------------------------------
-- Trigger for the default value of Card_no
-- -----------------------------------------

DELIMITER $
CREATE TRIGGER set_card_no
BEFORE INSERT ON `semester_project`.`Card`
FOR EACH ROW
BEGIN
  IF NEW.card_no IS NULL THEN
    SET NEW.card_no = card_number(NEW.user_id);
  END IF;
END $
DELIMITER ;



-- -----------------------------------------
-- This is a function that finds the number of cards
-- a user has had so far and returns that plus one
-- -----------------------------------------

DELIMITER $
CREATE FUNCTION card_number (user_idd INT) RETURNS INT 
READS SQL DATA
BEGIN 
  DECLARE result INT;
  SELECT count(card_no)+1 INTO result FROM `Card` WHERE `user_id` = user_idd;
  RETURN result;
END $
DELIMITER ;




SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
